swagger: '2.0'
info:
  description: Ideas Board description
  version: '1.0'
  title: YFU Intranet Ideas Board
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: like-controller
    description: Like Controller
  - name: idea-controller
    description: Idea Controller
  - name: comment-controller
    description: Comment Controller
  - name: commit-controller
    description: Commit Controller
paths:
  /api/ideas:
    get:
      tags:
        - idea-controller
      summary: getAllIdeas
      operationId: getAllIdeasUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IdeaResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - idea-controller
      summary: postIdea
      operationId: postIdeaUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: ideaResource
          description: ideaResource
          required: true
          schema:
            $ref: '#/definitions/IdeaResource'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IdeaResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/ideas/{ideaId}':
    get:
      tags:
        - idea-controller
      summary: getIdea
      operationId: getIdeaUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ideaId
          in: path
          description: ideaId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IdeaResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - idea-controller
      summary: updateIdea
      operationId: updateIdeaUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ideaId
          in: path
          description: ideaId
          required: true
          type: string
        - in: body
          name: ideaResource
          description: ideaResource
          required: true
          schema:
            $ref: '#/definitions/IdeaResource'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IdeaResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - idea-controller
      summary: deleteIdea
      operationId: deleteIdeaUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: ideaId
          in: path
          description: ideaId
          required: true
          type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/api/ideas/{ideaId}/comment':
    post:
      tags:
        - comment-controller
      summary: postComment
      operationId: postCommentUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ideaId
          in: path
          description: ideaId
          required: true
          type: string
        - in: body
          name: commentResource
          description: commentResource
          required: true
          schema:
            $ref: '#/definitions/CommentResource'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/ideas/{ideaId}/comment/{commentId}':
    put:
      tags:
        - comment-controller
      summary: editComment
      operationId: editCommentUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ideaId
          in: path
          description: ideaId
          required: true
          type: string
        - name: commentId
          in: path
          description: commentId
          required: true
          type: string
        - in: body
          name: commentResource
          description: commentResource
          required: true
          schema:
            $ref: '#/definitions/CommentResource'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommentResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - comment-controller
      summary: deleteComment
      operationId: deleteCommentUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: ideaId
          in: path
          description: ideaId
          required: true
          type: string
        - name: commentId
          in: path
          description: commentId
          required: true
          type: string
        - in: body
          name: commentResource
          description: commentResource
          required: true
          schema:
            $ref: '#/definitions/CommentResource'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/api/ideas/{ideaId}/commit':
    put:
      tags:
        - commit-controller
      summary: commit
      operationId: commitUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: ideaId
          in: path
          description: ideaId
          required: true
          type: string
        - in: body
          name: commitResource
          description: commitResource
          required: true
          schema:
            $ref: '#/definitions/CommitResource'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/ideas/{ideaId}/commit/{commitId}':
    delete:
      tags:
        - commit-controller
      summary: uncommit
      operationId: uncommitUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: ideaId
          in: path
          description: ideaId
          required: true
          type: string
        - name: commitId
          in: path
          description: commitId
          required: true
          type: string
        - in: body
          name: commitResource
          description: commitResource
          required: true
          schema:
            $ref: '#/definitions/CommitResource'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/api/ideas/{ideaId}/like':
    put:
      tags:
        - like-controller
      summary: like
      operationId: likeUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: ideaId
          in: path
          description: ideaId
          required: true
          type: string
        - in: body
          name: likeResource
          description: likeResource
          required: true
          schema:
            $ref: '#/definitions/LikeResource'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/ideas/{ideaId}/like/{likeId}':
    delete:
      tags:
        - like-controller
      summary: unlike
      operationId: unlikeUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: ideaId
          in: path
          description: ideaId
          required: true
          type: string
        - name: likeId
          in: path
          description: likeId
          required: true
          type: string
        - in: body
          name: likeResource
          description: likeResource
          required: true
          schema:
            $ref: '#/definitions/LikeResource'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  Comment:
    type: object
    properties:
      comment:
        type: string
      comment_at:
        type: string
        format: date-time
      comment_by:
        type: string
      id:
        type: string
      idea:
        $ref: '#/definitions/Idea'
  CommentResource:
    type: object
    properties:
      comment:
        type: string
      comment_at:
        type: string
        format: date-time
      comment_by:
        type: string
      id:
        type: string
  Commit:
    type: object
    properties:
      commit_at:
        type: string
        format: date-time
      commit_by:
        type: string
      id:
        type: string
      idea:
        $ref: '#/definitions/Idea'
  CommitResource:
    type: object
    properties:
      commit_at:
        type: string
        format: date-time
      commit_by:
        type: string
      id:
        type: string
  Idea:
    type: object
    properties:
      comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
      commits:
        type: array
        items:
          $ref: '#/definitions/Commit'
      created_at:
        type: string
        format: date-time
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      likes:
        type: array
        items:
          $ref: '#/definitions/Like'
      name:
        type: string
      status:
        type: string
        enum:
          - DRAFT
          - PUBLISHED
          - INPROGRESS
          - DONE
  IdeaResource:
    type: object
    properties:
      comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
      commits:
        type: array
        items:
          $ref: '#/definitions/Commit'
      created_at:
        type: string
        format: date-time
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      likes:
        type: array
        items:
          $ref: '#/definitions/Like'
      name:
        type: string
      status:
        type: string
        enum:
          - DRAFT
          - PUBLISHED
          - INPROGRESS
          - DONE
  Like:
    type: object
    properties:
      id:
        type: string
      idea:
        $ref: '#/definitions/Idea'
      like_at:
        type: string
        format: date-time
      like_by:
        type: string
  LikeResource:
    type: object
    properties:
      id:
        type: string
      like_at:
        type: string
        format: date-time
      like_by:
        type: string
